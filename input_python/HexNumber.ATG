COMPILER Aritmetica    
	
(.
/*--------------Scanner Especification----------*/
.)

CHARACTERS 

upletter = 'A' .. 'Z'.
downletter = 'a' .. 'z'.
letter = "abcdefghijklmnopqrstuvwxyz" + upletter + downletter. 
digit = "0123456789" .
hexdigit = digit + "ABCDEF".
hexterm = 'H'.
tab = CHR(9).
eol = CHR(10).
whitespace = CHR(13)+eol+tab+CHR(13).
sign ='+'+'-'.

KEYWORDS

while = "while".
do = "do".

TOKENS

ident = letter{letter|digit} EXCEPT KEYWORDS.
hexnumber = hexdigit{hexdigit}hexterm EXCEPT KEYWORDS.
number = digit{digit}.
signnumber = [sign]digit{digit}.
whitetoken = whitespace{whitespace}

PRODUCTIONS

Expr= {Stat (";")}".".

Stat = 							(.value=0.)
	Expression< ref value>		(.print(value).)
	.

Expression<ref result> =		(.result1=0;result2=0.)
	Term< ref result1>
	{    "+"Term< ref result2>		(.result1+=result2.)
	   | "-"Term< ref result2>		(.result1-=result2.)
	}							(.result=result1.)
	.

Term<ref result>=				(.result1=1;result2=1.)
	Factor<ref result1>
	{    "*"Factor<ref result2>	(.result1*=result2.)
	   | "/"Factor<ref result2>	(.result1/=result2.)
	}							(.result=result1.)
	.
	
Factor<ref result> =	(.signo=1.)
	["-"(.signo = -1.)]
	( Number<ref result> | "("Expression< ref result>")") (.result*=signo.).
	
Number<ref result> =  number (.result = self.getNumber().).
	.
END Aritmetica